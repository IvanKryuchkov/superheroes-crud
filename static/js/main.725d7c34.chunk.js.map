{"version":3,"sources":["forms/AddHeroForm.js","forms/EditHeroForm.js","tables/HeroTable.js","tables/HeroInfo.js","App.js","serviceWorker.js","index.js"],"names":["AddHeroForm","props","initialFormState","id","nickname","real_name","origin_description","superpowers","catch_phrase","images","useState","hero","setHero","handleInputChange","event","currentTarget","name","value","style","width","onSubmit","preventDefault","addHero","type","onChange","EditHeroForm","currentHero","useEffect","target","updateHero","onClick","setEditing","HeroTable","className","heroes","length","map","key","src","alt","showHero","editRow","window","confirm","deleteHero","HeroInfo","App","setHeroes","editing","setCurrentHero","updatedHero","filter","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.725d7c34.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst AddHeroForm = props => {\r\n\r\n    const initialFormState = { \r\n        id: null,\r\n        nickname: \"\",\r\n        real_name: \"\",\r\n        origin_description: \"\",\r\n        superpowers: \"\",\r\n        catch_phrase: \"\",\r\n        images: \"\",\r\n    }\r\n\r\n    const [hero, setHero] = useState(initialFormState);\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.currentTarget\r\n        setHero({ ...hero, [name]: value })\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (!hero.nickname || !hero.real_name || !hero.origin_description || !hero.catch_phrase || !hero.images) return\r\n        \r\n        props.addHero(hero);\r\n\r\n        setHero(initialFormState);\r\n    }\r\n\r\n\r\n  return (\r\n    <form style={{width: 200}} onSubmit={handleSubmit} >\r\n      <label>Nickname</label>\r\n      <input \r\n        type=\"text\" \r\n        name=\"nickname\" \r\n        value={hero.nickname}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>Real name</label>\r\n      <input \r\n        type=\"text\" \r\n        name=\"real_name\" \r\n        value={hero.real_name}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>Origin description</label>\r\n      <input \r\n        type=\"text\" \r\n        name=\"origin_description\" \r\n        value={hero.origin_description}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>Superpowers</label>\r\n      <input \r\n        type=\"text\" \r\n        name=\"superpowers\" \r\n        value={hero.superpowers}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>Catchphrase</label>\r\n      <input \r\n        type=\"text\" \r\n        name=\"catch_phrase\" \r\n        value={hero.catch_phrase}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>Image (URL)</label>\r\n      <input \r\n        type=\"text\" \r\n        name=\"images\" \r\n        value={hero.images}\r\n        onChange={handleInputChange}\r\n      />\r\n      <button>Add new hero</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport { AddHeroForm }","import React, { useState, useEffect } from 'react'\r\n\r\nconst EditHeroForm = props => {\r\n\r\n    const [hero, setHero] = useState(props.currentHero);\r\n\r\n    useEffect(\r\n        () => {\r\n          setHero(props.currentHero)\r\n        },\r\n        [props]\r\n      )\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target\r\n        setHero({ ...hero, [name]: value })\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (!hero.nickname || !hero.real_name || !hero.origin_description || !hero.catch_phrase || !hero.images) return\r\n        \r\n        props.updateHero(hero.id, hero);\r\n\r\n        //setHero(initialFormState);\r\n    }\r\n\r\n\r\n  return (\r\n    <form style={{width: 200}} onSubmit={handleSubmit} >\r\n      <label>Nickname</label>\r\n      <input \r\n        type=\"text\" \r\n        name=\"nickname\" \r\n        value={hero.nickname}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>Real name</label>\r\n      <input \r\n        type=\"text\" \r\n        name=\"real_name\" \r\n        value={hero.real_name}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>Origin description</label>\r\n      <input \r\n        type=\"text\" \r\n        name=\"origin_description\" \r\n        value={hero.origin_description}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>Superpowers</label>\r\n      <input \r\n        type=\"text\" \r\n        name=\"superpowers\" \r\n        value={hero.superpowers}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>Catchphrase</label>\r\n      <input \r\n        type=\"text\" \r\n        name=\"catch_phrase\" \r\n        value={hero.catch_phrase}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>Image (URL)</label>\r\n      <input \r\n        type=\"text\" \r\n        name=\"images\" \r\n        value={hero.images}\r\n        onChange={handleInputChange}\r\n      />\r\n      <button>Update Hero</button>\r\n      <button\r\n        onClick={()=>props.setEditing(false)}\r\n      >\r\n          Cancel\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport { EditHeroForm }","import React from 'react'\r\n\r\nconst HeroTable = props => {\r\n\r\nconst handleDeleteHero = id => {\r\n    let answer = window.confirm('Are you sure?')\r\n\r\n    if (answer) {\r\n        props.deleteHero(id)\r\n    }\r\n}\r\n\r\nreturn ( \r\n <div className=\"HeroTablediv\" >\r\n    {props.heroes.length > 0 ? (\r\n    props.heroes.map(hero => (\r\n        <div key={hero.id} className=\"HeroItem\">\r\n            <img style={{width:120}} src={hero.images} alt=\"HeroImage\" />\r\n            <h2>{hero.nickname}</h2>\r\n            <div className=\"Actions\" >\r\n                <button \r\n                    className=\"\"\r\n                    onClick={()=> props.showHero(hero)}\r\n                >\r\n                🔍\r\n                </button>\r\n                <button \r\n                    className=\"\"\r\n                    onClick={()=> props.editRow(hero)}\r\n                >\r\n                🔨\r\n                </button>\r\n                <button \r\n                    className=\"\"\r\n                    onClick={()=> handleDeleteHero(hero.id)}  \r\n                >\r\n                🗑️\r\n                </button>\r\n            </div>\r\n        </div>\r\n        ))\r\n      ) : (\r\n        <p>No heroes</p>\r\n      )}\r\n </div>\r\n)\r\n}\r\n\r\nexport { HeroTable }","import React, { useState, useEffect } from 'react'\r\n\r\nconst HeroInfo = props => {\r\n\r\n    const [hero, setHero] = useState(props.currentHero);\r\n\r\n    useEffect(\r\n        () => {\r\n          setHero(props.currentHero)\r\n        },\r\n        [props]\r\n      )\r\n\r\n  return (\r\n      <div className=\"HeroInfoTable\">\r\n      <img style={{width:200}} src={hero.images} alt=\"HeroImage\" />  \r\n      <p>Nickname: {hero.nickname}</p>\r\n      <p>Real name: {hero.real_name}</p>\r\n      <p>Origin description: {hero.origin_description}</p>\r\n      <p>Superpowers: {hero.superpowers}</p>\r\n      <p>Catchphrase: {hero.catch_phrase}</p>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport { HeroInfo }","import React, { useState } from 'react';\nimport { AddHeroForm } from './forms/AddHeroForm'\nimport { EditHeroForm } from './forms/EditHeroForm'\nimport { HeroTable } from './tables/HeroTable'\nimport { HeroInfo } from './tables/HeroInfo'\nimport './App.css';\n\nfunction App() {\n\n  const heroesData = [\n    {\n      id: 1,\n      nickname: \"Superman\",\n      real_name: \"Clark Kent\",\n      origin_description: \"he was born Kal-El on the planet Krypton, before being rocketed to Earth as an infant by his scientist father Jor-El, moments before Krypron's destruction...\",\n      superpowers: \"solar energy absorbtion\",\n      catch_phrase: \"Look, up in the sky, it's a bird, it's a plane, it's Superman!\",\n      images: \"https://i.pinimg.com/originals/05/c8/1f/05c81fc6606f614ccdcf307c1e85d099.png\",\n    },\n    {\n      id: 2,\n      nickname: \"Batman\",\n      real_name: \" Bruce Wayne\",\n      origin_description: \"he looks like bat\",\n      superpowers: \"lots of money\",\n      catch_phrase: \"Look, up in the sky, it's a bird, it's a plane, it's Batman!\",\n      images: \"https://upload.wikimedia.org/wikipedia/en/1/19/Batman_%28circa_2016%29.png\",\n    },\n  ];\n\n  const [heroes, setHeroes] = useState(heroesData);\n  const [editing, setEditing] = useState(false);\n  const initialFormState = { \n    id: null,\n    nickname: \"\",\n    real_name: \"\",\n    origin_description: \"\",\n    superpowers: \"\",\n    catch_phrase: \"\",\n    images: \"\",\n   };\n  const [currentHero, setCurrentHero] = useState(initialFormState);\n\n  const showHero = hero => {\n    setCurrentHero({\n      id: hero.id,\n      nickname: hero.nickname,\n      real_name: hero.real_name,\n      origin_description: hero.origin_description,\n      superpowers: hero.superpowers,\n      catch_phrase: hero.catch_phrase,\n      images: hero.images,\n    })\n  }\n\n  const addHero = hero => {\n    hero.id = heroes.length + 1;\n    setHeroes([ ...heroes, hero ]);\n  }\n\n  const deleteHero = id => {\n    setEditing(false);\n    setHeroes(heroes.filter(hero => hero.id !== id));\n  }\n\n  const updateHero = (id, updatedHero) => {\n    setEditing(false);\n    setHeroes(heroes.map(hero => (hero.id === id ? updatedHero : hero)));\n  }\n\n  const editRow = hero => {\n    setEditing(true);\n    setCurrentHero({\n      id: hero.id,\n      nickname: hero.nickname,\n      real_name: hero.real_name,\n      origin_description: hero.origin_description,\n      superpowers: hero.superpowers,\n      catch_phrase: hero.catch_phrase,\n      images: hero.images,\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <h1> SUPERHEROES CRUD </h1>\n      <div className=\"main\">\n        <div className=\"AddHeroForm\">\n          { editing ? (\n          < EditHeroForm \n            editing={editing}\n            setEditing={setEditing}\n            currentHero={currentHero}\n            updateHero={updateHero}\n          />\n          ) : (\n          < AddHeroForm addHero={addHero} />\n          )}\n        </div>\n        <div className=\"HeroTable\">\n          < HeroTable heroes={heroes} deleteHero={deleteHero} editRow={editRow} showHero={showHero} />\n        </div>\n        <div className=\"HeroInfo\">\n         <h3>SUPERHERO INFO</h3>\n          < HeroInfo \n            currentHero={currentHero}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}